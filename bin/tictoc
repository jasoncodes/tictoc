#!/usr/bin/env ruby

$:.unshift(File.join(File.dirname(__FILE__), "/../lib"))
require 'tictoc'

require 'active_support/core_ext'
require 'appscript'
require 'ostruct'

class ModelBase < OpenStruct
  def <=>(other)
    self.sort_key <=> other.sort_key
  end
end

class Task < ModelBase
end

class Session < ModelBase
  def sort_key
    [self.date, self.task.name.downcase]
  end

  def date
    start_date.to_date
  end
end

sessions = []
app = Appscript.app('Tictoc')
app.tasks.properties_.get.each do |task_data|
  task_ref = app.tasks.ID(task_data[:id_])
  task = Task.new(task_data)
  task_ref.sessions.properties_.get.each do |session_data|
    session = Session.new(session_data.merge(:task => task))
    sessions << session
  end
end

footer_text = "Total:"
max_name_len = footer_text.size

days = {}
sessions.sort.each do |session|
  day = days[session.date] ||= Hash.new(0)
  day[session.task.name] += session.duration / 3600.0
  max_name_len = [max_name_len, session.task.name.size].max
end

def format_hours(hours)
  hours = hours.round 2
  "#{hours.floor.to_s.rjust 2}:#{(hours*60%60).round(0).to_s.rjust(2,'0')} (#{'%0.02f' % hours} hours)"
end

days.each do |date,tasks|
  puts date.strftime '%Y-%m-%d %A'
  tasks.each do |name, hours|
    puts "  #{name.ljust max_name_len} #{format_hours hours}"
  end
  puts "  #{footer_text.rjust max_name_len} #{format_hours tasks.values.sum}"
  puts
end
